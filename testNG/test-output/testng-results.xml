<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="12" passed="10" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-05T16:22:31Z" name="MySuite" finished-at="2020-12-05T16:22:31Z" duration-ms="532">
    <groups>
      <group name="Smoke">
        <method signature="Day2.ploan(java.lang.String)[pri:0, instance:mainpac.Day2@42a15bdc]" name="ploan" class="mainpac.Day2"/>
        <method signature="Day3.mobile2(java.lang.String, java.lang.String)[pri:0, instance:mainpac.Day3@27adc16e]" name="mobile2" class="mainpac.Day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2020-12-05T16:22:31Z" name="MyTest" finished-at="2020-12-05T16:22:31Z" duration-ms="58">
      <class name="mainpac.Day1">
        <test-method is-config="true" signature="before()[pri:0, instance:mainpac.Day1@4e07b95f]" started-at="2020-12-05T19:22:31Z" name="before" finished-at="2020-12-05T19:22:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="before()[pri:0, instance:mainpac.Day2@42a15bdc]" started-at="2020-12-05T19:22:31Z" name="before" finished-at="2020-12-05T19:22:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="demo2()[pri:0, instance:mainpac.Day1@4e07b95f]" started-at="2020-12-05T19:22:31Z" name="demo2" finished-at="2020-12-05T19:22:31Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
        <test-method is-config="true" signature="after()[pri:0, instance:mainpac.Day1@4e07b95f]" started-at="2020-12-05T19:22:31Z" name="after" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- mainpac.Day1 -->
      <class name="mainpac.Day2">
        <test-method signature="ploan(java.lang.String)[pri:0, instance:mainpac.Day2@42a15bdc]" started-at="2020-12-05T19:22:31Z" name="ploan" finished-at="2020-12-05T19:22:31Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.google.commmm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- mainpac.Day2 -->
    </test> <!-- MyTest -->
    <test started-at="2020-12-05T16:22:31Z" name="Car loan" finished-at="2020-12-05T16:22:31Z" duration-ms="532">
      <class name="mainpac.Day3">
        <test-method is-config="true" signature="bs()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:24Z" name="bs" finished-at="2020-12-05T19:22:24Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bs -->
        <test-method is-config="true" signature="login()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:24Z" name="login" finished-at="2020-12-05T19:22:31Z" duration-ms="6879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="bc()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bc" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bc -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="datapr(java.lang.String, java.lang.String)[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="datapr" data-provider="getData" finished-at="2020-12-05T19:22:31Z" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zerou]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[zerop]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- datapr -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="datapr(java.lang.String, java.lang.String)[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="datapr" data-provider="getData" finished-at="2020-12-05T19:22:31Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[oneu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onep]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- datapr -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="datapr(java.lang.String, java.lang.String)[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="datapr" data-provider="getData" finished-at="2020-12-05T19:22:31Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[twou]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[twop]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- datapr -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="datapr2(java.lang.Object, java.lang.Object)[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="datapr2" data-provider="getData" finished-at="2020-12-05T19:22:31Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zerou]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[zerop]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- datapr2 -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="datapr2(java.lang.Object, java.lang.Object)[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="datapr2" data-provider="getData" finished-at="2020-12-05T19:22:31Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[oneu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[onep]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- datapr2 -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="datapr2(java.lang.Object, java.lang.Object)[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="datapr2" data-provider="getData" finished-at="2020-12-05T19:22:31Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[twou]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[twop]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- datapr2 -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="mobile2(java.lang.String, java.lang.String)[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="mobile2" finished-at="2020-12-05T19:22:31Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[www.vk.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[adadasdasdasdsadsa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobile2 -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="noginAPI()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="noginAPI" finished-at="2020-12-05T19:22:31Z" duration-ms="420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noginAPI -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method is-config="true" signature="bm()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="bm" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="webLogin()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="webLogin" finished-at="2020-12-05T19:22:31Z" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at mainpac.Day3.webLogin(Day3.java:67)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLogin -->
        <test-method is-config="true" signature="am()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="am" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method signature="mobileLogin()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="mobileLogin" finished-at="2020-12-05T19:22:31Z" depends-on-methods="mainpac.Day3.webLogin" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLogin -->
        <test-method is-config="true" signature="ac()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="ac" finished-at="2020-12-05T19:22:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ac -->
        <test-method is-config="true" signature="as()[pri:0, instance:mainpac.Day3@27adc16e]" started-at="2020-12-05T19:22:31Z" name="as" finished-at="2020-12-05T19:22:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- as -->
      </class> <!-- mainpac.Day3 -->
    </test> <!-- Car loan -->
  </suite> <!-- MySuite -->
</testng-results>
